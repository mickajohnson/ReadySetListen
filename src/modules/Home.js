import { useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { useRouter } from "next/router";
import { useState } from "react";
import SearchArtist from "@/components/SearchArtist";
import SetlistPicker from "@/components/SetlistPicker";
import axios from "axios";
import SetlistExplorer from "@/components/SetlistExplorer";
import { setlistSorter } from "@/utils/setlist";

const inter = Inter({ subsets: ["latin"] });

const SPOTIFY_LOGIN_LINK = `https://accounts.spotify.com/authorize?client_id=${
  process.env.NEXT_PUBLIC__SPOTIFY_CLIENT_ID
}&redirect_uri=${encodeURIComponent(
  process.env.NEXT_PUBLIC__CALLBACK_URL
)}&scope=user-read-private%20user-read-email%20playlist-modify-public%20playlist-read-private%20playlist-modify-private&response_type=token&state=${
  process.env.NEXT_PUBLIC__SPOTIFY_STATE
}`;

export default function Home() {
  const { asPath } = useRouter();
  const [hash, setHash] = useState(null);
  // const [selectedArtist, setSelectedArtist] = useState(null);
  const [selectedArtist, setSelectedArtist] = useState(
    "9e53f84d-ef44-4c16-9677-5fd4d78cbd7d"
  );
  const [selectedSetlist, setSelectedSetlist] = useState(null);
  const [setlists, setSetlists] = useState(null);
  const [playlistUri, setPlaylistUri] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    const getSetlists = async () => {
      setError(null);

      setSetlists(null);
      try {
        const { data: setlistData } = await axios.get(
          `/api/setlists?artist=${selectedArtist}`
        );
        const formattedSetlists = setlistSorter(setlistData.setlists);
        setSetlists(formattedSetlists);
      } catch (error) {
        console.error(error);
        setError("Sorry, no setlist info on that artist found");
      }
    };

    if (selectedArtist) {
      getSetlists();
    }
  }, [selectedArtist]);

  useEffect(() => {
    setHash(asPath.split("#")[1]);
  }, [asPath]);

  const onSetArtist = (artistId) => {
    setSelectedSetlist(null);
    setSelectedArtist(artistId);
  };

  return (
    <>
      <Head>
        <title>Ready Set Listen</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div id="header">
          <img id="logo" src="../logo.png" />
        </div>
        <div id="error">
          <p>{error}</p>
        </div>
        <div id="main-body">
          {!hash ? (
            <div id="login-container">
              <div className="sub-container">
                <a className="login" href={SPOTIFY_LOGIN_LINK}>
                  Login to Spotify
                </a>
              </div>
            </div>
          ) : (
            <>
              <SearchArtist
                selectedArtist={selectedArtist}
                setSelectedArtist={onSetArtist}
                setError={setError}
              />
              {setlists ? (
                <SetlistPicker
                  setlists={setlists}
                  selectedSetlist={selectedSetlist}
                  setSelectedSetlist={setSelectedSetlist}
                  setError={setError}
                />
              ) : null}
              {selectedSetlist !== null ? (
                <SetlistExplorer
                  selectedSetlist={setlists[selectedSetlist]}
                  playlistUri={playlistUri}
                  setPlaylistUri={setPlaylistUri}
                  setError={setError}
                />
              ) : null}
            </>
          )}
        </div>
        <div id="footer">
          <div className="footer-div footer-div-1">
            {hash ? (
              <p>
                <a className="login" href={SPOTIFY_LOGIN_LINK}>
                  Log Back in
                </a>
              </p>
            ) : null}
          </div>
          <div className="footer-div footer-div-2">
            <p>
              Made Possible With:
              <a href="http://www.setlist.fm">Setlist.fm</a>,
              <a href="https://musicbrainz.org/"> MusicBrainz</a>, &
              <a href="https://www.spotify.com/us/"> Spotify</a>
            </p>
          </div>
        </div>
      </main>
    </>
  );
}
